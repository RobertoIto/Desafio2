server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name nginx;

        # add_header X-Frame-Options "SAMEORIGIN";
        # add_header X-XSS-Protection "1; mode=block";
        # add_header X-Content-Type-Options "nosniff";
        
        # charset utf-8;

        location / {
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Aqui, não podemos deixar o servidor como localhost,
                # pois estamos usando o docker, é preciso colocar o nome 
                # do servidor/container do servidor node, no caso, é node.
                # Se deixar localhost vai dar o erro 502 Bad Gateway.
                # Comando manual:
                # Comando do docker-compose:
                #       docker run -it --name node --network nodenet -p 3000:3000 
                #               robertohito/node:latest
                # Serviços, no caso os containers node e nginx
                # services:
                #       node:
                #               build:
                #                       context: ./node
                #               image: robertohito/node:latest
                #               container_name: node
                #               networks:
                #                       - nodenet
                proxy_pass http://node:3000/;
        }

        # Os logs no favicon e robots estão sendo ignorados.
        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

}
